{"version":3,"sources":["settings/index.ts","api/api.ts","api/donations.ts","utils/stringUtil.ts","component/Confirm.tsx","page/Donation.tsx","App.tsx","index.tsx"],"names":["api","production","development","test","url","donations","app","donation","目標額","締切","Date","constants","newId","BASE_BACKEND","settings","baseHeaders","baseGet","a","params","headers","urlObj","URL","p","URLSearchParams","Object","keys","forEach","key","append","search","toString","fetch","method","mode","cache","redirect","then","response","json","catch","e","basePost","body","JSON","stringify","getData","prop","postData","thousandCommas","num","s","String","split","ret","replace","length","Confirm","open","title","content","onCancelClick","onOkClick","cancelButtonText","okButtonText","rest","Dialog","onClose","DialogTitle","DialogContent","DialogActions","Button","color","onClick","variant","sumTotal","list","total","isEmpty","isArray","item","amount","isOverDeadline","validateName","name","validateAmount","isInteger","isOverTarget","current","Donation","useState","setName","nameValid","setNameValid","setAmount","amountValid","setAmountValid","setTotal","refresh","setRefresh","dialogOpen","setDialogOpen","useEffect","res","refreshPage","doRefresh","handleSubmit","data","result","error","className","Card","style","width","maxWidth","padding","Typography","fontSize","verticalAlign","gutterBottom","align","formatDistance","locale","ja","IconButton","size","TextField","label","helperText","value","onChange","event","target","inputProps","maxLength","type","parseInt","disabled","PaperProps","App","StylesProvider","injectFirst","ThemeProvider","theme","createMuiTheme","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4117411.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  api: {\n    production: \"https://h0x0vwtnni.execute-api.ap-northeast-1.amazonaws.com\",\n    development: \"https://h0x0vwtnni.execute-api.ap-northeast-1.amazonaws.com\",\n    test: \"http://localhost:3001\",\n  },\n  url: {\n    donations: \"/donations\",\n  },\n  app: {\n    donation: {\n      目標額: 5275,\n      締切: new Date(2021, 2, 19, 23, 59, 59),\n    },\n  },\n  constants: {\n    newId: \"__new__\",\n  },\n};\n","import {\n  ApiProp,\n  ApiPropWithBody,\n  BaseApiProp,\n  BaseApiPropWithBody,\n} from \"../types\";\nimport settings from \"../settings\";\n\nexport const BASE_BACKEND = settings.api[process.env.NODE_ENV];\n\nconst baseHeaders = {\n  \"Content-Type\": \"application/json; charset=utf-8\",\n};\n/**\n * Base Apis\n *\n * @param param0\n */\nconst baseGet = async ({\n  url,\n  params,\n  headers,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nBaseApiProp): Promise<any> => {\n  const urlObj = new URL(url);\n  const p = new URLSearchParams();\n  // パラメタがあった場合は追加\n  if (params) {\n    Object.keys(params).forEach(key => p.append(key, params[key]));\n    urlObj.search = p.toString();\n  }\n  return fetch(urlObj.toString(), {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    // credentials: 'include',\n    headers,\n    redirect: \"follow\",\n  })\n    .then(response => response.json())\n    .catch(e => e);\n};\n\nconst basePost = async ({\n  url,\n  params,\n  body,\n  headers,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nBaseApiPropWithBody): Promise<any> => {\n  const urlObj = new URL(url);\n  const p = new URLSearchParams();\n  // パラメタがあった場合は追加\n  if (params) {\n    Object.keys(params).forEach(key => p.append(key, params[key]));\n    urlObj.search = p.toString();\n  }\n  return fetch(urlObj.toString(), {\n    method: \"Post\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    // credentials: 'include', // include, same-origin, *omit\n    headers,\n    redirect: \"follow\",\n    body: JSON.stringify(body), // 本文のデータ型は \"Content-Type\" ヘッダーと一致する必要があります\n  })\n    .then(response => response.json()) // レスポンスの JSON を解析\n    .catch(e => e);\n};\n\nexport const getData = async ({\n  url = BASE_BACKEND,\n  params,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nApiProp): Promise<any> => {\n  const prop = {\n    url,\n    params,\n    headers: baseHeaders,\n  };\n  return baseGet(prop);\n};\n\nexport const postData = async ({\n  url = BASE_BACKEND,\n  params,\n  body,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nApiPropWithBody): Promise<any> => {\n  const prop = {\n    url,\n    params,\n    body,\n    headers: baseHeaders,\n  };\n  return basePost(prop);\n};\n","import { BASE_BACKEND, getData, postData } from \".\";\nimport { DonationsModel, IApiResponseBase } from \"../types\";\nimport settings from \"../settings\";\n\nconst url = `${BASE_BACKEND}${settings.url.donations}`;\n\nexport const fetchDonations = (): Promise<IApiResponseBase<DonationsModel[]>> =>\n  getData({ url });\n\nexport const createDonations = (\n  item: DonationsModel,\n): Promise<IApiResponseBase<undefined>> =>\n  postData({\n    url,\n    body: item,\n  }).then((data: IApiResponseBase<undefined>) => data);\n","// eslint-disable-next-line import/prefer-default-export\nexport const ph = (phstr: string, vals: string[]): string => {\n  let res = phstr;\n  vals.forEach((val, index) => {\n    res = res.replace(`{${index}}`, val);\n  });\n  return res;\n};\n\n// xxxx.0 -> x,xxx / xxxx.1 -> x,xxx.1\n// eslint-disable-next-line import/prefer-default-export\nexport const thousandCommas = (num: number): string => {\n  const s = String(num).split(\".\");\n  let ret = String(s[0]).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n  if (s.length > 1) {\n    ret += `.${s[1]}`;\n  }\n  return ret;\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogProps,\n} from \"@material-ui/core\";\n\nexport interface ConfirmProps extends DialogProps {\n  open: boolean;\n  title?: string;\n  content: React.ReactNode;\n  onCancelClick: () => void;\n  onOkClick: () => void;\n  cancelButtonText?: string;\n  okButtonText?: string;\n}\n\nconst Confirm = ({\n  open,\n  title,\n  content,\n  onCancelClick,\n  onOkClick,\n  cancelButtonText,\n  okButtonText,\n  ...rest\n}: ConfirmProps): JSX.Element => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <Dialog open={open} onClose={onCancelClick} {...rest}>\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>{content}</DialogContent>\n    <DialogActions>\n      <Button color=\"primary\" onClick={onCancelClick}>\n        {cancelButtonText || \"Cancel\"}\n      </Button>\n      <Button color=\"primary\" variant=\"contained\" onClick={onOkClick}>\n        {okButtonText || \"OK\"}\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\nexport default Confirm;\n","import React, { useEffect, useState } from \"react\";\nimport Confetti from \"react-confetti\";\nimport {\n  Button,\n  Card,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { isArray, isEmpty, isInteger } from \"lodash\";\nimport { formatDistance } from \"date-fns\";\nimport { ja } from \"date-fns/locale\";\nimport { createDonations, fetchDonations } from \"../api/donations\";\nimport settings from \"../settings\";\nimport { thousandCommas } from \"../utils\";\nimport { DonationsModel } from \"../types\";\nimport { Confirm } from \"../component\";\n\nconst amountMin = 1;\nconst amountMax = 5000;\n\nconst sumTotal = (list: DonationsModel[]): number => {\n  let total = 0;\n  if (list && !isEmpty(list) && isArray(list)) {\n    list.forEach(item => {\n      total += item.amount;\n    });\n  }\n  return total;\n};\n\nconst isOverDeadline = (): boolean => {\n  const now = new Date();\n  const { 締切 } = settings.app.donation;\n  return now > 締切;\n};\nconst diffDeadline = (): string =>\n  isOverDeadline()\n    ? \"募集終了しました\"\n    : formatDistance(settings.app.donation.締切, new Date(), { locale: ja });\n\nconst validateName = (name: string): string => {\n  if (!name) {\n    return \"名前を入力してください\";\n  }\n  return \"\";\n};\n\nconst validateAmount = (amount: number | string): string => {\n  if (!amount) {\n    return \"金額を入力してください\";\n  }\n  if (!isInteger(amount) || amount < amountMin || amount > amountMax) {\n    return `${amountMin}〜${amountMax}の整数で入力してください`;\n  }\n  return \"\";\n};\n\nconst isOverTarget = (current: number): boolean =>\n  current >= settings.app.donation.目標額;\n\nexport const Donation = (): JSX.Element => {\n  const [name, setName] = useState<string>(\"\");\n  const [nameValid, setNameValid] = useState<string>(\"\");\n  const [amount, setAmount] = useState<number | string>(\"\");\n  const [amountValid, setAmountValid] = useState<string>(\"\");\n  const [total, setTotal] = useState<number>(0);\n  const [refresh, setRefresh] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    const refreshPage = async () => {\n      const res = await fetchDonations();\n      if (res.body) {\n        setTotal(sumTotal(res.body));\n      }\n      setName(\"\");\n      setAmount(\"\");\n    };\n    refreshPage();\n  }, [refresh]);\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setName(value);\n    setNameValid(validateName(value));\n  };\n  const onAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n    setAmount(value);\n    setAmountValid(validateAmount(value));\n  };\n  const doRefresh = () => {\n    setRefresh(!refresh);\n  };\n  const onDonateClick = () => {\n    setDialogOpen(true);\n  };\n  const handleCancel = () => {\n    setDialogOpen(false);\n  };\n  const handleSubmit = async () => {\n    setDialogOpen(false);\n    const res = await createDonations({\n      name,\n      amount: typeof amount === \"string\" ? 0 : amount || 0,\n    });\n    if (res.result && !res.result.error) {\n      doRefresh();\n    }\n  };\n  return (\n    <>\n      <div className=\"column-container ai-center-container\">\n        <Card\n          className=\"margin-tb-8 column-container ai-center-container\"\n          style={{ width: \"80%\", maxWidth: 500, padding: \"10px\" }}\n        >\n          <div>\n            <Typography variant=\"h5\">吉田さんプレゼント代</Typography>\n            <Typography\n              style={{ fontSize: 14, verticalAlign: \"middle\" }}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              ・現在の支援総額\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              {`${thousandCommas(total || 0)}円`}\n            </Typography>\n            <Typography\n              style={{ fontSize: 14 }}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              ・目標金額\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              {`${thousandCommas(settings.app.donation.目標額)}円`}\n            </Typography>\n            <Typography\n              style={{ fontSize: 14 }}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              ・募集終了まで残り\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              {diffDeadline()}\n            </Typography>\n          </div>\n        </Card>\n        <Card style={{ width: \"80%\", maxWidth: 500, padding: \"0px 20px\" }}>\n          <div className=\"margin-tb-8 row-container jc-flex-end-container\">\n            <IconButton size=\"small\" onClick={doRefresh}>\n              <RefreshIcon />\n            </IconButton>\n          </div>\n          <div className=\"margin-tb-8 column-container each-margin-tb-8-container\">\n            <TextField\n              label=\"お名前\"\n              error={!!nameValid}\n              helperText={nameValid}\n              value={name}\n              onChange={onNameChange}\n              inputProps={{\n                maxLength: 10,\n              }}\n            />\n            <TextField\n              label=\"金額\"\n              error={!!amountValid}\n              helperText={amountValid}\n              type=\"number\"\n              value={amount}\n              onChange={onAmountChange}\n            />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={\n                !!(\n                  validateName(name) ||\n                  validateAmount(amount) ||\n                  isOverTarget(total) ||\n                  isOverDeadline()\n                )\n              }\n              onClick={onDonateClick}\n            >\n              支援する\n            </Button>\n            <div className=\"margin-tb-8 row-container jc-flex-end-container\">\n              <Typography>※お支払いは現金 or LinePayでお願いします</Typography>\n            </div>\n          </div>\n        </Card>\n      </div>\n      {isOverTarget(total) && <Confetti />}\n      <Confirm\n        open={dialogOpen}\n        title=\"ご確認\"\n        content={\n          // eslint-disable-next-line react/jsx-wrap-multilines\n          <>\n            <div style={{ padding: \"0px 20px\" }}>\n              <Typography>{`お名前:${name}`}</Typography>\n              <Typography>{`金額:${amount}`}</Typography>\n            </div>\n          </>\n        }\n        onOkClick={handleSubmit}\n        onCancelClick={handleCancel}\n        PaperProps={{ style: { width: \"50%\" } }}\n      />\n    </>\n  );\n};\n\nexport default Donation;\n","import React from \"react\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n  StylesProvider,\n} from \"@material-ui/core\";\nimport Donation from \"./page/Donation\";\n\nconst App = (): JSX.Element => (\n  <StylesProvider injectFirst>\n    <ThemeProvider theme={createMuiTheme({})}>\n      <CssBaseline>\n        <Donation />\n      </CssBaseline>\n    </ThemeProvider>\n  </StylesProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}