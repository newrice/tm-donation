{"version":3,"sources":["settings/index.ts","api/api.ts","api/donations.ts","utils/stringUtil.ts","page/Donation.tsx","App.tsx","index.tsx"],"names":["donations","BASE_BACKEND","production","development","test","baseHeaders","baseGet","a","url","params","headers","urlObj","URL","p","URLSearchParams","Object","keys","forEach","key","append","search","toString","fetch","method","mode","cache","redirect","then","response","json","catch","e","basePost","body","JSON","stringify","getData","prop","postData","settings","thousandCommas","num","s","String","split","ret","replace","length","sumTotal","list","total","isEmpty","isArray","item","amount","isOverTarget","current","Donation","useState","name","setName","nameValid","setNameValid","setAmount","amountValid","setAmountValid","setTotal","refresh","setRefresh","useEffect","res","refreshPage","doRefresh","onDonateClick","data","result","error","className","Card","style","width","maxWidth","padding","Typography","variant","IconButton","size","onClick","TextField","label","helperText","value","onChange","event","target","validateName","inputProps","maxLength","type","parseInt","isInteger","validateAmount","Button","color","disabled","App","StylesProvider","injectFirst","ThemeProvider","theme","createMuiTheme","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da23c260.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  api: {\n    production: \"https://h0x0vwtnni.execute-api.ap-northeast-1.amazonaws.com\",\n    development: \"https://h0x0vwtnni.execute-api.ap-northeast-1.amazonaws.com\",\n    test: \"http://localhost:3001\",\n  },\n  url: {\n    donations: \"/donations\",\n  },\n  目標額: 5275,\n  constants: {\n    newId: \"__new__\",\n  },\n};\n","import {\n  ApiProp,\n  ApiPropWithBody,\n  BaseApiProp,\n  BaseApiPropWithBody,\n} from \"../types\";\nimport settings from \"../settings\";\n\nexport const BASE_BACKEND = settings.api[process.env.NODE_ENV];\n\nconst baseHeaders = {\n  \"Content-Type\": \"application/json; charset=utf-8\",\n};\n/**\n * Base Apis\n *\n * @param param0\n */\nconst baseGet = async ({\n  url,\n  params,\n  headers,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nBaseApiProp): Promise<any> => {\n  const urlObj = new URL(url);\n  const p = new URLSearchParams();\n  // パラメタがあった場合は追加\n  if (params) {\n    Object.keys(params).forEach(key => p.append(key, params[key]));\n    urlObj.search = p.toString();\n  }\n  return fetch(urlObj.toString(), {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    // credentials: 'include',\n    headers,\n    redirect: \"follow\",\n  })\n    .then(response => response.json())\n    .catch(e => e);\n};\n\nconst basePost = async ({\n  url,\n  params,\n  body,\n  headers,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nBaseApiPropWithBody): Promise<any> => {\n  const urlObj = new URL(url);\n  const p = new URLSearchParams();\n  // パラメタがあった場合は追加\n  if (params) {\n    Object.keys(params).forEach(key => p.append(key, params[key]));\n    urlObj.search = p.toString();\n  }\n  return fetch(urlObj.toString(), {\n    method: \"Post\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    // credentials: 'include', // include, same-origin, *omit\n    headers,\n    redirect: \"follow\",\n    body: JSON.stringify(body), // 本文のデータ型は \"Content-Type\" ヘッダーと一致する必要があります\n  })\n    .then(response => response.json()) // レスポンスの JSON を解析\n    .catch(e => e);\n};\n\nexport const getData = async ({\n  url = BASE_BACKEND,\n  params,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nApiProp): Promise<any> => {\n  const prop = {\n    url,\n    params,\n    headers: baseHeaders,\n  };\n  return baseGet(prop);\n};\n\nexport const postData = async ({\n  url = BASE_BACKEND,\n  params,\n  body,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nApiPropWithBody): Promise<any> => {\n  const prop = {\n    url,\n    params,\n    body,\n    headers: baseHeaders,\n  };\n  return basePost(prop);\n};\n","import { BASE_BACKEND, getData, postData } from \".\";\nimport { DonationsModel, IApiResponseBase } from \"../types\";\nimport settings from \"../settings\";\n\nconst url = `${BASE_BACKEND}${settings.url.donations}`;\n\nexport const fetchDonations = (): Promise<IApiResponseBase<DonationsModel[]>> =>\n  getData({ url });\n\nexport const createDonations = (\n  item: DonationsModel,\n): Promise<IApiResponseBase<undefined>> =>\n  postData({\n    url,\n    body: item,\n  }).then((data: IApiResponseBase<undefined>) => data);\n","// eslint-disable-next-line import/prefer-default-export\nexport const ph = (phstr: string, vals: string[]): string => {\n  let res = phstr;\n  vals.forEach((val, index) => {\n    res = res.replace(`{${index}}`, val);\n  });\n  return res;\n};\n\n// xxxx.0 -> x,xxx / xxxx.1 -> x,xxx.1\n// eslint-disable-next-line import/prefer-default-export\nexport const thousandCommas = (num: number): string => {\n  const s = String(num).split(\".\");\n  let ret = String(s[0]).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n  if (s.length > 1) {\n    ret += `.${s[1]}`;\n  }\n  return ret;\n};\n","import React, { useEffect, useState } from \"react\";\nimport Confetti from \"react-confetti\";\nimport {\n  Button,\n  Card,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { isArray, isEmpty, isInteger } from \"lodash\";\nimport { createDonations, fetchDonations } from \"../api/donations\";\nimport settings from \"../settings\";\nimport { thousandCommas } from \"../utils\";\nimport { DonationsModel } from \"../types\";\n\nconst amountMin = 1;\nconst amountMax = 5000;\n\nconst sumTotal = (list: DonationsModel[]): number => {\n  let total = 0;\n  if (list && !isEmpty(list) && isArray(list)) {\n    list.forEach(item => {\n      total += item.amount;\n    });\n  }\n  return total;\n};\n\nconst validateName = (name: string): string => {\n  if (!name) {\n    return \"名前を入力してください\";\n  }\n  return \"\";\n};\n\nconst validateAmount = (amount: number | string): string => {\n  if (!amount) {\n    return \"金額を入力してください\";\n  }\n  if (!isInteger(amount) || amount < amountMin || amount > amountMax) {\n    return `${amountMin}〜${amountMax}の整数で入力してください`;\n  }\n  return \"\";\n};\n\nconst isOverTarget = (current: number): boolean => current >= settings.目標額;\n\nexport const Donation = (): JSX.Element => {\n  const [name, setName] = useState<string>(\"\");\n  const [nameValid, setNameValid] = useState<string>(\"\");\n  const [amount, setAmount] = useState<number | string>(\"\");\n  const [amountValid, setAmountValid] = useState<string>(\"\");\n  const [total, setTotal] = useState<number>(0);\n  const [refresh, setRefresh] = useState<boolean>(false);\n  useEffect(() => {\n    const refreshPage = async () => {\n      const res = await fetchDonations();\n      if (res.body) {\n        setTotal(sumTotal(res.body));\n      }\n      setName(\"\");\n      setAmount(\"\");\n    };\n    refreshPage();\n  }, [refresh]);\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setName(value);\n    setNameValid(validateName(value));\n  };\n  const onAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n    setAmount(value);\n    setAmountValid(validateAmount(value));\n  };\n  const doRefresh = () => {\n    setRefresh(!refresh);\n  };\n  const onDonateClick = async () => {\n    const res = await createDonations({\n      name,\n      amount: typeof amount === \"string\" ? 0 : amount || 0,\n    });\n    if (res.result && !res.result.error) {\n      doRefresh();\n    }\n  };\n  return (\n    <>\n      <div className=\"column-container ai-center-container\">\n        <Card\n          className=\"margin-tb-8 column-container ai-center-container\"\n          style={{ width: \"80%\", maxWidth: 500, padding: \"10px\" }}\n        >\n          <Typography variant=\"h5\">吉田さんプレゼント代</Typography>\n          <Typography variant=\"h6\">\n            {`現在の支援総額：${thousandCommas(total || 0)}円`}\n          </Typography>\n          <Typography>\n            {`目標金額は：${thousandCommas(settings.目標額)}円`}\n          </Typography>\n        </Card>\n        <Card style={{ width: \"80%\", maxWidth: 500, padding: \"0px 20px\" }}>\n          <div className=\"margin-tb-8 row-container jc-flex-end-container\">\n            <IconButton size=\"small\" onClick={doRefresh}>\n              <RefreshIcon />\n            </IconButton>\n          </div>\n          <div className=\"margin-tb-8 column-container each-margin-tb-8-container\">\n            <TextField\n              label=\"お名前\"\n              error={!!nameValid}\n              helperText={nameValid}\n              value={name}\n              onChange={onNameChange}\n              inputProps={{\n                maxLength: 10,\n              }}\n            />\n            <TextField\n              label=\"金額\"\n              error={!!amountValid}\n              helperText={amountValid}\n              type=\"number\"\n              value={amount}\n              onChange={onAmountChange}\n            />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={!!(nameValid || amountValid || isOverTarget(total))}\n              onClick={onDonateClick}\n            >\n              支援する\n            </Button>\n            <div className=\"margin-tb-8 row-container jc-flex-end-container\">\n              <Typography>※お支払いは現金 or LinePayでお願いします</Typography>\n            </div>\n          </div>\n        </Card>\n      </div>\n      {isOverTarget(total) && <Confetti />}\n    </>\n  );\n};\n\nexport default Donation;\n","import React from \"react\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n  StylesProvider,\n} from \"@material-ui/core\";\nimport Donation from \"./page/Donation\";\n\nconst App = (): JSX.Element => (\n  <StylesProvider injectFirst>\n    <ThemeProvider theme={createMuiTheme({})}>\n      <CssBaseline>\n        <Donation />\n      </CssBaseline>\n    </ThemeProvider>\n  </StylesProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}