{"version":3,"sources":["settings/index.ts","api/api.ts","api/donations.ts","utils/stringUtil.ts","component/DonationDialogValidator.ts","component/DonationDialog.tsx","component/QRCodeDialog.tsx","page/Donation.tsx","App.tsx","index.tsx"],"names":["api","production","development","test","url","donations","app","donation","タイトル","目標額","締切","Date","寄付額","MAX","MIN","目安表示額","constants","newId","BASE_BACKEND","settings","baseHeaders","baseGet","a","params","headers","urlObj","URL","p","URLSearchParams","Object","keys","forEach","key","append","search","toString","fetch","method","mode","cache","redirect","then","response","json","catch","e","basePost","body","JSON","stringify","getData","prop","postData","thousandCommas","num","s","String","split","ret","replace","length","validateName","name","validateAmount","amount","isInteger","validateEmail","email","isEmail","validateComment","comment","DonationDialog","open","onCancelClick","onOkClick","cancelButtonText","okButtonText","rest","useState","setName","nameValid","setNameValid","setAmount","amountValid","setAmountValid","setEmail","emailValid","setEmailValid","setComment","commentValid","setCommentValid","Dialog","onClose","PaperProps","style","width","maxWidth","DialogContent","className","TextField","label","error","helperText","value","onChange","event","target","inputProps","maxLength","multiline","rows","type","parseInt","DialogActions","Button","color","onClick","variant","disabled","data","QRCodeDialog","src","alt","sumTotal","list","total","isEmpty","isArray","item","isOverDeadline","Donation","setTotal","datas","setDatas","isLoading","setIsLoading","refresh","setRefresh","dialogOpen","setDialogOpen","qrDialogOpen","setQrDialogOpen","useEffect","res","console","log","message","refreshPage","current","handleSubmit","result","Card","padding","Typography","fontSize","verticalAlign","gutterBottom","align","formatDistance","locale","ja","flexGrow","map","margin","App","StylesProvider","injectFirst","ThemeProvider","theme","createMuiTheme","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTACe,GACbA,IAAK,CACHC,WAAY,8DACZC,YAAa,8DACbC,KAAM,yBAERC,IAAK,CACHC,UAAW,cAEbC,IAAK,CACHC,SAAU,CACRC,2BAAM,0GACNC,qBAAK,KACLC,eAAI,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,IAClCC,qBAAK,CACHC,IAAK,IACLC,IAAK,IACLC,iCAAO,OAIbC,UAAW,CACTC,MAAO,YCfEC,EAAeC,EAASnB,IAAT,WAEtBoB,EAAc,CAClB,eAAgB,mCAOZC,EAAO,uCAAG,qCAAAC,EAAA,6DACdlB,EADc,EACdA,IACAmB,EAFc,EAEdA,OACAC,EAHc,EAGdA,QAGMC,EAAS,IAAIC,IAAItB,GACjBuB,EAAI,IAAIC,gBAEVL,IACFM,OAAOC,KAAKP,GAAQQ,SAAQ,SAAAC,GAAG,OAAIL,EAAEM,OAAOD,EAAKT,EAAOS,OACxDP,EAAOS,OAASP,EAAEQ,YAXN,kBAaPC,MAAMX,EAAOU,WAAY,CAC9BE,OAAQ,MACRC,KAAM,OACNC,MAAO,WAEPf,UACAgB,SAAU,WAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIA,MAtBA,2CAAH,sDAyBPC,EAAQ,uCAAG,uCAAAxB,EAAA,6DACflB,EADe,EACfA,IACAmB,EAFe,EAEfA,OACAwB,EAHe,EAGfA,KACAvB,EAJe,EAIfA,QAGMC,EAAS,IAAIC,IAAItB,GACjBuB,EAAI,IAAIC,gBAEVL,IACFM,OAAOC,KAAKP,GAAQQ,SAAQ,SAAAC,GAAG,OAAIL,EAAEM,OAAOD,EAAKT,EAAOS,OACxDP,EAAOS,OAASP,EAAEQ,YAZL,kBAcRC,MAAMX,EAAOU,WAAY,CAC9BE,OAAQ,OACRC,KAAM,OACNC,MAAO,WAEPf,UACAgB,SAAU,SACVO,KAAMC,KAAKC,UAAUF,KAEpBN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAC,OAAIA,MAxBC,2CAAH,sDA2BDK,EAAO,uCAAG,mCAAA5B,EAAA,iEACrBlB,WADqB,MACfc,EADe,EAErBK,EAFqB,EAErBA,OAGM4B,EAAO,CACX/C,MACAmB,SACAC,QAASJ,GARU,kBAUdC,EAAQ8B,IAVM,2CAAH,sDAaPC,EAAQ,uCAAG,qCAAA9B,EAAA,iEACtBlB,WADsB,MAChBc,EADgB,EAEtBK,EAFsB,EAEtBA,OACAwB,EAHsB,EAGtBA,KAGMI,EAAO,CACX/C,MACAmB,SACAwB,OACAvB,QAASJ,GAVW,kBAYf0B,EAASK,IAZM,2CAAH,sDC/Ef/C,EAAG,UAAMc,GAAN,OAAqBC,EAASf,IAAIC,WCO9BgD,EAAiB,SAACC,GAC7B,IAAMC,EAAIC,OAAOF,GAAKG,MAAM,KACxBC,EAAMF,OAAOD,EAAE,IAAII,QAAQ,2BAA4B,OAI3D,OAHIJ,EAAEK,OAAS,IACbF,GAAG,WAAQH,EAAE,KAERG,G,4DCbD9C,EAAQO,EAASb,IAAIC,SAArBK,mBAEKiD,EAAe,SAACC,GAC3B,OAAKA,EAGE,GAFE,sEAKEC,EAAiB,SAACC,GAC7B,OAAKA,GAGAC,oBAAUD,IAAWA,GAAUpD,EAAIE,KAAOkD,GAAUpD,EAAIC,IACrD,GAAN,OAAUD,EAAIE,IAAd,iBAAqBF,EAAIC,IAAzB,4EAEK,GALE,sEAQEqD,EAAgB,SAACC,GAC5B,OAAKA,EAGAC,IAAQD,GAGN,GAFC,qHAHC,oGAQEE,EAAkB,SAACC,GAC9B,OAAKA,EAGE,GAFE,kF,OCmIIC,EA7IQ,SAAC,GAOU,IANhCC,EAM+B,EAN/BA,KACAC,EAK+B,EAL/BA,cACAC,EAI+B,EAJ/BA,UACAC,EAG+B,EAH/BA,iBACAC,EAE+B,EAF/BA,aACGC,EAC4B,wFACPC,mBAAiB,IADV,mBACxBhB,EADwB,KAClBiB,EADkB,OAEGD,mBAAiB,IAFpB,mBAExBE,EAFwB,KAEbC,EAFa,OAGHH,mBAA0B,IAHvB,mBAGxBd,EAHwB,KAGhBkB,EAHgB,OAIOJ,mBAAiB,IAJxB,mBAIxBK,EAJwB,KAIXC,EAJW,OAKLN,mBAAiB,IALZ,mBAKxBX,EALwB,KAKjBkB,EALiB,OAMKP,mBAAiB,IANtB,mBAMxBQ,EANwB,KAMZC,EANY,OAODT,mBAAiB,IAPhB,mBAOxBR,EAPwB,KAOfkB,EAPe,OAQSV,mBAAiB,IAR1B,mBAQxBW,EARwB,KAQVC,EARU,KAsC/B,OACE,eAACC,EAAA,EAAD,yBACEnB,KAAMA,EACNoB,QAASnB,EACToB,WAAY,CAAEC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SAE3CnB,GALN,cAQE,eAACoB,EAAA,EAAD,CAAeC,UAAU,uCAAzB,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,qBACNF,UAAU,cACVJ,MAAO,CACLC,MAAO,QAETM,QAASrB,EACTsB,WAAYtB,EACZuB,MAAOzC,EACP0C,SAhDa,SAACC,GAAgD,IAC5DF,EAAUE,EAAMC,OAAhBH,MACRxB,EAAQwB,GACRtB,EAAapB,EAAa0C,KA8CpBI,WAAY,CACVC,UAAW,MAGf,cAACT,EAAA,EAAD,CACEC,MAAM,6CACNF,UAAU,cACVJ,MAAO,CACLC,MAAO,QAETM,QAASf,EACTgB,WAAYhB,GAAc,6FAC1BiB,MAAOpC,EACPqC,SAzDc,SAACC,GAAgD,IAC7DF,EAAUE,EAAMC,OAAhBH,MACRlB,EAASkB,GACThB,EAAcrB,EAAcqC,KAuDtBI,WAAY,CACVC,UAAW,MAGf,cAACT,EAAA,EAAD,CACEC,MAAM,2BACNS,WAAS,EACTC,KAAM,EACNZ,UAAU,cACVJ,MAAO,CACLC,MAAO,QAETM,QAASZ,EACTa,WAAYb,EACZc,MAAOjC,EACPkC,SA/DgB,SAACC,GAAgD,IAC/DF,EAAUE,EAAMC,OAAhBH,MACRf,EAAWe,GACXb,EAAgBrB,EAAgBkC,KA6D1BI,WAAY,CACVC,UAAW,OAGf,cAACT,EAAA,EAAD,CACEC,MAAM,eACNF,UAAU,cACVJ,MAAO,CACLC,MAAO,QAETM,QAASlB,EACTmB,WAAYnB,EACZ4B,KAAK,SACLR,MAAOvC,EACPwC,SAnFe,SAACC,GACtB,IAAMF,EAAQS,SAASP,EAAMC,OAAOH,MAAO,IAC3CrB,EAAUqB,GACVnB,EAAerB,EAAewC,OAkF1B,qBACEL,UAAU,sCACVJ,MAAO,CAAEC,MAAO,QAFlB,+HAOF,eAACkB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS3C,EAAjC,SACGE,GAAoB,WAEvB,cAACuC,EAAA,EAAD,CACEC,MAAM,UACNE,QAAQ,YACRC,YAEIzD,EAAaC,IACbI,EAAcC,IACdE,EAAgBC,IAChBP,EAAeC,IAGnBoD,QAjGa,WACnB,IAAMG,EAAuB,CAC3BzD,OACAE,OAA0B,kBAAXA,EAAsBgD,SAAShD,EAAQ,IAAMA,EAC5DM,UACAH,SAEFO,EAAU6C,IA+EN,SAaG3C,GAAgB,eChJZ4C,EARM,SAAC,GAAD,IAAGhD,EAAH,EAAGA,KAAMoB,EAAT,EAASA,QAAT,OACnB,cAACD,EAAA,EAAD,CAAQnB,KAAMA,EAAMoB,QAASA,EAA7B,SACE,eAACK,EAAA,EAAD,WACE,gDACA,qBAAKwB,IAAI,UAAUC,IAAI,SAAS3B,MAAM,QAAQD,MAAO,WCCrD6B,EAAW,SAACC,GAChB,IAAIC,EAAQ,EAMZ,OALID,IAASE,kBAAQF,IAASG,kBAAQH,IACpCA,EAAK7F,SAAQ,SAAAiG,GACXH,GAASG,EAAKhE,UAGX6D,GAGHI,EAAiB,WAGrB,OAFY,IAAItH,KACDQ,EAASb,IAAIC,SAApBG,cA6KKwH,EAlKS,WAAoB,IAAD,EACfpD,mBAAiB,GADF,mBAClC+C,EADkC,KAC3BM,EAD2B,OAEfrD,mBAA+B,IAFhB,mBAElCsD,EAFkC,KAE3BC,EAF2B,OAGPvD,oBAAkB,GAHX,mBAGlCwD,EAHkC,KAGvBC,EAHuB,OAIXzD,oBAAkB,GAJP,mBAIlC0D,EAJkC,KAIzBC,EAJyB,OAKL3D,oBAAkB,GALb,mBAKlC4D,EALkC,KAKtBC,EALsB,OAMD7D,oBAAkB,GANjB,mBAMlC8D,EANkC,KAMpBC,EANoB,KAQzCC,qBAAU,YACS,uCAAG,4BAAAxH,EAAA,sEAEhBiH,GAAa,GAFG,SLtCtBrF,EAAQ,CAAE9C,QKsCY,OAGV2I,EAHU,OAIhBV,EAASU,EAAIhG,MAAQ,IACrBoF,EAASR,EAASoB,EAAIhG,MAAQ,KALd,gDAOhBiG,QAAQC,IAAR,kBAAuB,KAAEC,UAPT,yBAShBX,GAAa,GATG,4EAAH,qDAYjBY,KACC,CAACX,IACJ,IA1BoBY,EAyCdC,EAAY,uCAAG,WAAO9B,GAAP,eAAAjG,EAAA,6DACnBqH,GAAc,GADK,SL9DrBvF,EAAS,CACPhD,MACA2C,KK8DkCwE,IL7DjC9E,MAAK,SAAC8E,GAAD,OAAuCA,KK2D1B,QAEbwB,EAFa,QAGXO,SAAWP,EAAIO,OAAOjD,OAjB9BoC,GAAYD,GAcO,2CAAH,sDAOlB,OACE,qCACE,sBAAKtC,UAAU,uCAAf,UACE,cAACqD,EAAA,EAAD,CACErD,UAAU,mDACVJ,MAAO,CAAEC,MAAO,MAAOC,SAAU,IAAKwD,QAAS,QAFjD,SAIE,sBAAKtD,UAAU,mBAAf,UACE,cAACuD,EAAA,EAAD,CAAYpC,QAAQ,KAAKnB,UAAU,cAAnC,SACG/E,EAASb,IAAIC,SAASC,2BAEzB,cAACiJ,EAAA,EAAD,CACE3D,MAAO,CAAE4D,SAAU,GAAIC,cAAe,UACtCxC,MAAM,gBACNyC,cAAY,EAHd,8DAOA,cAACH,EAAA,EAAD,CAAYpC,QAAQ,KAAKwC,MAAM,SAA/B,SACGvB,EAAY,aAAH,UAAqBjF,EAAewE,GAAS,GAA7C,YAEZ,cAAC4B,EAAA,EAAD,CACE3D,MAAO,CAAE4D,SAAU,IACnBvC,MAAM,gBACNyC,cAAY,EAHd,4CAOA,cAACH,EAAA,EAAD,CAAYpC,QAAQ,KAAKwC,MAAM,SAA/B,mBACMxG,EAAelC,EAASb,IAAIC,SAASE,oBAD3C,YAGA,cAACgJ,EAAA,EAAD,CACE3D,MAAO,CAAE4D,SAAU,IACnBvC,MAAM,gBACNyC,cAAY,EAHd,oEAOA,cAACH,EAAA,EAAD,CAAYpC,QAAQ,KAAKwC,MAAM,SAA/B,SA1FV5B,IACI,mDACA6B,YAAe3I,EAASb,IAAIC,SAASG,aAAI,IAAIC,KAAQ,CAAEoJ,OAAQC,SA2FzD,sBAAK9D,UAAU,iBAAf,UACE,cAACgB,EAAA,EAAD,CACEC,MAAM,UACNE,QAAQ,YACRnB,UAAU,WACVJ,MAAO,CAAEmE,SAAU,GACnB3C,WAAYW,IACZb,QAnEQ,WACpBuB,GAAc,IA4DJ,sCAUA,cAACzB,EAAA,EAAD,CACEC,MAAM,UACNE,QAAQ,YACRnB,UAAU,WACVJ,MAAO,CAAEmE,SAAU,GACnB3C,WAAYW,IACZb,QA1ES,WACrByB,GAAgB,IAmEN,oCAaN,cAAC,EAAD,CACErE,KAAMkE,EACNhE,UAAW2E,EACX5E,cA9Ea,WACnBkE,GAAc,MA+EV,cAAC,EAAD,CAAcnE,KAAMoE,EAAchD,QAnFb,WACzBiD,GAAgB,MAmFXT,EAAM8B,KAAI,SAAAlC,GAAI,OACb,eAACuB,EAAA,EAAD,CAAMzD,MAAO,CAAEC,MAAO,MAAOC,SAAU,IAAKwD,QAAS,GAAIW,OAAQ,GAAjE,UACE,wCAASnC,EAAKlE,KAAd,+BACA,cAACqC,EAAA,EAAD,CACEU,WAAS,EACTN,MAAOyB,EAAK1D,QACZ4B,UAAU,cACVJ,MAAO,CACLC,MAAO,oBA/HDqD,EAgKFvB,EA/JlBuB,GAAWjI,EAASb,IAAIC,SAASE,oBA+JL,cAAC,IAAD,SC9Kf2J,EAVH,kBACV,cAACC,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,cAACC,EAAA,EAAD,CAAeC,MAAOC,YAAe,IAArC,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,WCRRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.aa7bbeb4.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  api: {\n    production: \"https://h0x0vwtnni.execute-api.ap-northeast-1.amazonaws.com\",\n    development: \"https://h0x0vwtnni.execute-api.ap-northeast-1.amazonaws.com\",\n    test: \"http://localhost:3001\",\n  },\n  url: {\n    donations: \"/donations\",\n  },\n  app: {\n    donation: {\n      タイトル: \"藤渕さん：ご結構祝いコメント&ご祝儀\",\n      目標額: 5275,\n      締切: new Date(2021, 6, 19, 23, 59, 59),\n      寄付額: {\n        MAX: 2000,\n        MIN: 500,\n        目安表示額: 1000,\n      },\n    },\n  },\n  constants: {\n    newId: \"__new__\",\n  },\n};\n","import {\n  ApiProp,\n  ApiPropWithBody,\n  BaseApiProp,\n  BaseApiPropWithBody,\n} from \"../types\";\nimport settings from \"../settings\";\n\nexport const BASE_BACKEND = settings.api[process.env.NODE_ENV];\n\nconst baseHeaders = {\n  \"Content-Type\": \"application/json; charset=utf-8\",\n};\n/**\n * Base Apis\n *\n * @param param0\n */\nconst baseGet = async ({\n  url,\n  params,\n  headers,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nBaseApiProp): Promise<any> => {\n  const urlObj = new URL(url);\n  const p = new URLSearchParams();\n  // パラメタがあった場合は追加\n  if (params) {\n    Object.keys(params).forEach(key => p.append(key, params[key]));\n    urlObj.search = p.toString();\n  }\n  return fetch(urlObj.toString(), {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    // credentials: 'include',\n    headers,\n    redirect: \"follow\",\n  })\n    .then(response => response.json())\n    .catch(e => e);\n};\n\nconst basePost = async ({\n  url,\n  params,\n  body,\n  headers,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nBaseApiPropWithBody): Promise<any> => {\n  const urlObj = new URL(url);\n  const p = new URLSearchParams();\n  // パラメタがあった場合は追加\n  if (params) {\n    Object.keys(params).forEach(key => p.append(key, params[key]));\n    urlObj.search = p.toString();\n  }\n  return fetch(urlObj.toString(), {\n    method: \"Post\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    // credentials: 'include', // include, same-origin, *omit\n    headers,\n    redirect: \"follow\",\n    body: JSON.stringify(body), // 本文のデータ型は \"Content-Type\" ヘッダーと一致する必要があります\n  })\n    .then(response => response.json()) // レスポンスの JSON を解析\n    .catch(e => e);\n};\n\nexport const getData = async ({\n  url = BASE_BACKEND,\n  params,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nApiProp): Promise<any> => {\n  const prop = {\n    url,\n    params,\n    headers: baseHeaders,\n  };\n  return baseGet(prop);\n};\n\nexport const postData = async ({\n  url = BASE_BACKEND,\n  params,\n  body,\n}: // eslint-disable-next-line @typescript-eslint/no-explicit-any\nApiPropWithBody): Promise<any> => {\n  const prop = {\n    url,\n    params,\n    body,\n    headers: baseHeaders,\n  };\n  return basePost(prop);\n};\n","import { BASE_BACKEND, getData, postData } from \".\";\nimport { DonationsModel, IApiResponseBase } from \"../types\";\nimport settings from \"../settings\";\n\nconst url = `${BASE_BACKEND}${settings.url.donations}`;\n\nexport const fetchDonations = (): Promise<IApiResponseBase<DonationsModel[]>> =>\n  getData({ url });\n\nexport const createDonations = (\n  item: DonationsModel,\n): Promise<IApiResponseBase<undefined>> =>\n  postData({\n    url,\n    body: item,\n  }).then((data: IApiResponseBase<undefined>) => data);\n","// eslint-disable-next-line import/prefer-default-export\nexport const ph = (phstr: string, vals: string[]): string => {\n  let res = phstr;\n  vals.forEach((val, index) => {\n    res = res.replace(`{${index}}`, val);\n  });\n  return res;\n};\n\n// xxxx.0 -> x,xxx / xxxx.1 -> x,xxx.1\n// eslint-disable-next-line import/prefer-default-export\nexport const thousandCommas = (num: number): string => {\n  const s = String(num).split(\".\");\n  let ret = String(s[0]).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n  if (s.length > 1) {\n    ret += `.${s[1]}`;\n  }\n  return ret;\n};\n","import { isInteger } from \"lodash\";\nimport isEmail from \"validator/lib/isEmail\";\nimport settings from \"../settings\";\n\nconst { 寄付額 } = settings.app.donation;\n\nexport const validateName = (name: string): string => {\n  if (!name) {\n    return \"名前を入力してください\";\n  }\n  return \"\";\n};\n\nexport const validateAmount = (amount: number | string): string => {\n  if (!amount) {\n    return \"金額を入力してください\";\n  }\n  if (!isInteger(amount) || amount <= 寄付額.MIN || amount >= 寄付額.MAX) {\n    return `${寄付額.MIN}〜${寄付額.MAX}の整数で入力してください`;\n  }\n  return \"\";\n};\n\nexport const validateEmail = (email: string): string => {\n  if (!email) {\n    return \"メールアドレスを入力してください\";\n  }\n  if (!isEmail(email)) {\n    return `有効なメールアドレスを入力してください`;\n  }\n  return \"\";\n};\n\nexport const validateComment = (comment: string): string => {\n  if (!comment) {\n    return \"コメントを入力してください\";\n  }\n  return \"\";\n};\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogProps,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  validateAmount,\n  validateEmail,\n  validateName,\n  validateComment,\n} from \"./DonationDialogValidator\";\nimport { DonationsModel } from \"../types\";\n\nexport interface ConfirmProps extends DialogProps {\n  open: boolean;\n  onCancelClick: () => void;\n  onOkClick: (data: DonationsModel) => void;\n  cancelButtonText?: string;\n  okButtonText?: string;\n}\n\nconst DonationDialog = ({\n  open,\n  onCancelClick,\n  onOkClick,\n  cancelButtonText,\n  okButtonText,\n  ...rest\n}: ConfirmProps): JSX.Element => {\n  const [name, setName] = useState<string>(\"\");\n  const [nameValid, setNameValid] = useState<string>(\"\");\n  const [amount, setAmount] = useState<number | string>(\"\");\n  const [amountValid, setAmountValid] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [emailValid, setEmailValid] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n  const [commentValid, setCommentValid] = useState<string>(\"\");\n  const onNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setName(value);\n    setNameValid(validateName(value));\n  };\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setEmail(value);\n    setEmailValid(validateEmail(value));\n  };\n  const onAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value, 10);\n    setAmount(value);\n    setAmountValid(validateAmount(value));\n  };\n  const onCommentChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setComment(value);\n    setCommentValid(validateComment(value));\n  };\n  const handleSubmit = () => {\n    const data: DonationsModel = {\n      name,\n      amount: typeof amount === \"string\" ? parseInt(amount, 10) : amount,\n      comment,\n      email,\n    };\n    onOkClick(data);\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancelClick}\n      PaperProps={{ style: { width: \"50%\", maxWidth: \"70%\" } }}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    >\n      {/* <DialogTitle></DialogTitle> */}\n      <DialogContent className=\"column-container ai-center-container\">\n        <TextField\n          label=\"お名前\"\n          className=\"margin-tb-8\"\n          style={{\n            width: \"100%\",\n          }}\n          error={!!nameValid}\n          helperText={nameValid}\n          value={name}\n          onChange={onNameChange}\n          inputProps={{\n            maxLength: 10,\n          }}\n        />\n        <TextField\n          label=\"メールアドレス\"\n          className=\"margin-tb-8\"\n          style={{\n            width: \"100%\",\n          }}\n          error={!!emailValid}\n          helperText={emailValid || \"コメント編集時に必要になります\"}\n          value={email}\n          onChange={onEmailChange}\n          inputProps={{\n            maxLength: 50,\n          }}\n        />\n        <TextField\n          label=\"コメント\"\n          multiline\n          rows={3}\n          className=\"margin-tb-8\"\n          style={{\n            width: \"100%\",\n          }}\n          error={!!commentValid}\n          helperText={commentValid}\n          value={comment}\n          onChange={onCommentChange}\n          inputProps={{\n            maxLength: 500,\n          }}\n        />\n        <TextField\n          label=\"金額\"\n          className=\"margin-tb-8\"\n          style={{\n            width: \"100%\",\n          }}\n          error={!!amountValid}\n          helperText={amountValid}\n          type=\"number\"\n          value={amount}\n          onChange={onAmountChange}\n        />\n        <div\n          className=\"row-container jc-flex-end-container\"\n          style={{ width: \"100%\" }}\n        >\n          ※お支払い方法：G3社員へ現金渡し or QR決済\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onCancelClick}>\n          {cancelButtonText || \"Cancel\"}\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={\n            !!(\n              validateName(name) ||\n              validateEmail(email) ||\n              validateComment(comment) ||\n              validateAmount(amount)\n            )\n          }\n          onClick={handleSubmit}\n        >\n          {okButtonText || \"OK\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default DonationDialog;\n","import React from \"react\";\nimport { Dialog, DialogContent } from \"@material-ui/core\";\n\nexport interface QRCodeDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst QRCodeDialog = ({ open, onClose }: QRCodeDialogProps): JSX.Element => (\n  <Dialog open={open} onClose={onClose}>\n    <DialogContent>\n      <div>PayPay QRCode</div>\n      <img src=\"/qr.jpg\" alt=\"qrcode\" width=\"180px\" style={{}} />\n    </DialogContent>\n  </Dialog>\n);\nexport default QRCodeDialog;\n","import React, { useEffect, useState } from \"react\";\nimport Confetti from \"react-confetti\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { isArray, isEmpty } from \"lodash\";\nimport { formatDistance } from \"date-fns\";\nimport { ja } from \"date-fns/locale\";\nimport { createDonations, fetchDonations } from \"../api/donations\";\nimport settings from \"../settings\";\nimport { thousandCommas } from \"../utils\";\nimport { DonationsModel, DonationsModelBase } from \"../types\";\nimport DonationDialog from \"../component/DonationDialog\";\nimport QRCodeDialog from \"../component/QRCodeDialog\";\n\nconst sumTotal = (list: DonationsModel[]): number => {\n  let total = 0;\n  if (list && !isEmpty(list) && isArray(list)) {\n    list.forEach(item => {\n      total += item.amount;\n    });\n  }\n  return total;\n};\n\nconst isOverDeadline = (): boolean => {\n  const now = new Date();\n  const { 締切 } = settings.app.donation;\n  return now > 締切;\n};\nconst diffDeadline = (): string =>\n  isOverDeadline()\n    ? \"募集終了しました\"\n    : formatDistance(settings.app.donation.締切, new Date(), { locale: ja });\n\nconst isOverTarget = (current: number): boolean =>\n  current >= settings.app.donation.目標額;\n\nexport const Donation = (): JSX.Element => {\n  const [total, setTotal] = useState<number>(0);\n  const [datas, setDatas] = useState<DonationsModelBase[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [refresh, setRefresh] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [qrDialogOpen, setQrDialogOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    const refreshPage = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetchDonations();\n        setDatas(res.body || []);\n        setTotal(sumTotal(res.body || []));\n      } catch (e) {\n        console.log(`Error : ${e.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    refreshPage();\n  }, [refresh]);\n  const doRefresh = () => {\n    setRefresh(!refresh);\n  };\n  const onDonateClick = () => {\n    setDialogOpen(true);\n  };\n  const onPaymentClick = () => {\n    setQrDialogOpen(true);\n  };\n  const handlePaymentClose = () => {\n    setQrDialogOpen(false);\n  };\n  const handleCancel = () => {\n    setDialogOpen(false);\n  };\n  const handleSubmit = async (data: DonationsModel) => {\n    setDialogOpen(false);\n    const res = await createDonations(data);\n    if (res.result && !res.result.error) {\n      doRefresh();\n    }\n  };\n  return (\n    <>\n      <div className=\"column-container ai-center-container\">\n        <Card\n          className=\"margin-tb-8 column-container ai-center-container\"\n          style={{ width: \"80%\", maxWidth: 500, padding: \"10px\" }}\n        >\n          <div className=\"column-container\">\n            <Typography variant=\"h5\" className=\"margin-tb-8\">\n              {settings.app.donation.タイトル}\n            </Typography>\n            <Typography\n              style={{ fontSize: 14, verticalAlign: \"middle\" }}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              ・現在の支援総額\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              {isLoading ? \"loading...\" : `${thousandCommas(total || 0)}円`}\n            </Typography>\n            <Typography\n              style={{ fontSize: 14 }}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              ・目標金額\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              {`${thousandCommas(settings.app.donation.目標額)}円`}\n            </Typography>\n            <Typography\n              style={{ fontSize: 14 }}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              ・募集終了まで残り\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              {diffDeadline()}\n            </Typography>\n            <div className=\"row-container \">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className=\"margin-8\"\n                style={{ flexGrow: 4 }}\n                disabled={!!isOverDeadline()}\n                onClick={onDonateClick}\n              >\n                支援する\n              </Button>\n              <Button\n                color=\"default\"\n                variant=\"contained\"\n                className=\"margin-8\"\n                style={{ flexGrow: 1 }}\n                disabled={!!isOverDeadline()}\n                onClick={onPaymentClick}\n              >\n                QR決済\n              </Button>\n            </div>\n          </div>\n        </Card>\n        <DonationDialog\n          open={dialogOpen}\n          onOkClick={handleSubmit}\n          onCancelClick={handleCancel}\n        />\n        <QRCodeDialog open={qrDialogOpen} onClose={handlePaymentClose} />\n        {datas.map(item => (\n          <Card style={{ width: \"80%\", maxWidth: 500, padding: 10, margin: 8 }}>\n            <div>{`${item.name} さんより`}</div>\n            <TextField\n              multiline\n              value={item.comment}\n              className=\"margin-tb-8\"\n              style={{\n                width: \"100%\",\n              }}\n            />\n          </Card>\n        ))}\n        {/* <Card style={{ width: \"80%\", maxWidth: 500, padding: \"0px 20px\" }}>\n          <div className=\"margin-tb-8 row-container jc-flex-end-container\">\n            <IconButton size=\"small\" onClick={doRefresh}>\n              <RefreshIcon />\n            </IconButton>\n          </div>\n          <div className=\"margin-tb-8 column-container each-margin-tb-8-container\">\n            <TextField\n              label=\"お名前\"\n              error={!!nameValid}\n              helperText={nameValid}\n              value={name}\n              onChange={onNameChange}\n              inputProps={{\n                maxLength: 10,\n              }}\n            />\n            <TextField\n              label=\"金額\"\n              error={!!amountValid}\n              helperText={amountValid}\n              type=\"number\"\n              value={amount}\n              onChange={onAmountChange}\n            />\n          </div>\n        </Card> */}\n      </div>\n      {isOverTarget(total) && <Confetti />}\n    </>\n  );\n};\n\nexport default Donation;\n","import React from \"react\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n  StylesProvider,\n} from \"@material-ui/core\";\nimport Donation from \"./page/Donation\";\n\nconst App = (): JSX.Element => (\n  <StylesProvider injectFirst>\n    <ThemeProvider theme={createMuiTheme({})}>\n      <CssBaseline>\n        <Donation />\n      </CssBaseline>\n    </ThemeProvider>\n  </StylesProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}